var SRCS=['pinyin.c','cloud.c','local.c','trie.c','system.c'];
var DIRS=['l32','l64',

	];

env("VPATH+=$(TOPDIR)/cloud");
env("CFLAGS+=$(PICFLAGS) $(LLIB_CFLAGS)");
env("LDFLAGS+=-shared $(LLIB_LDFLAGS)");
env("LIBS+=$(LLIB_LDADD)");

function run(target){
	if(target=="js")
		env("LIBS-=$(LLIB_LDADD)");
	cd(target);
	include("../../rules.txt");
	if(target=="w32" || target=="w64")
		env("LIBS+=-lws2_32");
	var OBJS=wildcard(SRCS,function(input){
		return input.replace(/.c$/,'.o');
	});
	begin();
	cc(SRCS,OBJS);
	end(function(){
		if(target=="js")
			ld(OBJS,'$(DESTDIR)/libcloud.bc');
		else
			ld(OBJS,'$(DESTDIR)/libcloud.so');
	});
}

if(target=="clean"){
	rmdir(DIRS,'*');
} else if(!target || target=="all"){
	build(undefined,undefined,DIRS);
} else {
	run(target);
}
