var SRCS=['mb.c','face.c','pinyin.c','learn.c','assoc.c','pyzip.c',
	'trie.c','fuzzy.c','cset.c','sentence.c','tools.c'];
var DIRS=['l32','l64',

	];

env("VPATH+=$(TOPDIR)/mb");
env("CFLAGS+=$(PICFLAGS) $(LLIB_CFLAGS)");
env("LDFLAGS+=$(LLIB_LDFLAGS)");
env("LIBS+=$(LLIB_LDADD)");

// env("CFLAGS+=-fanalyzer -Wno-analyzer-possible-null-dereference -Wno-analyzer-possible-null-argument -Wno-analyzer-malloc-leak");

function run(target){
	cd(target);
	include("../../rules.txt");
	if(target=="l32" || target=="l64"){
		env("CFLAGS+=-fvisibility=hidden");
		env("LIBS=-ldl -ll -lpthread");
	}
	var OBJS=wildcard(SRCS,function(input){
		return input.replace(/\.c$/,'.o');
	});
	begin();
	cc(SRCS,OBJS);	
	end(function(){
		push();
		env("LDFLAGS+=-shared");
		ld(OBJS,'$(DESTDIR)/libmb.so');
		pop();

	});
}

if(target=="clean"){
	rmdir(DIRS,'*');
} else if(!target || target=="all"){
	build(undefined,undefined,DIRS);
} else if(target=="test"){
	exec("install l64/libmb.so ../install/yong/l64/");
} else {
	run(target);
}
